#server
server.port=8080
# thymeleaf
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.check-template-location=true
spring.thymeleaf.suffix=.html
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
spring.thymeleaf.mode=HTML5
spring.thymeleaf.cache=false


com.tlk.str="xlx"

#WeChat pay
com.tlk.appId=wxe1312e10d0a77bc3
com.tlk.appSecret=3b25ae66f3f0a42a4afdb81f5793f450
com.tlk.mchId=1290193501
com.tlk.paternerKey=Non6dXoxd3bZryXArTpUDjn3q4QkAYwd
com.tlk.imgPath=/rabbit-fe
com.tlk.base_url=http://hjtech.wicp.net:8210/rabbit-api
com.tlk.qiniuPath=http://static.yiweibao.cn/

#七牛云存储
com.tlk.QN_ACCESS_KEY=QUm083Z5qU4ITDbxrXYvqVwBd6mKypPE-4WhXRdy
com.tlk.QN_SECRET_KEY=V3VviNnubfeOMEK6ETQRpcoo1JsE323gKnjbVZaw
com.tlk.QN_bucketname=yiweibao



spring.datasource.url=jdbc:mysql://localhost:3306/yiweibao?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.max-active=20
spring.datasource.max-idle=8
spring.datasource.min-idle=8
spring.datasource.initial-size=10



#create：
#   每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
#create-drop ：
#    每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
#update：
#    最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。
#validate ：
#    每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。


########################################################
### Java Persistence Api
########################################################
# Specify the DBMS
spring.jpa.database =MYSQL
# Show or not log for each sql query
spring.jpa.show-sql =true
# Hibernate ddl auto (create, create-drop, update,validate )
spring.jpa.hibernate.ddl-auto =update
# Naming strategy
#[org.hibernate.cfg.ImprovedNamingStrategy | org.hibernate.cfg.DefaultNamingStrategy]
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.DefaultNamingStrategy
# stripped before adding them to the entity manager)
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect


